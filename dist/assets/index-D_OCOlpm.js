(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const n of a)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(a){const n={};return a.integrity&&(n.integrity=a.integrity),a.referrerPolicy&&(n.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?n.credentials="include":a.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(a){if(a.ep)return;a.ep=!0;const n=t(a);fetch(a.href,n)}})();class o{static querySelector(e,t=document){return t.querySelector(e)}static querySelectorAll(e,t=document){return t.querySelectorAll(e)}static createElement(e,t){const s=document.createElement(e);return t?.classes&&s.classList.add(...t.classes),t?.attributes&&Object.entries(t.attributes).forEach(([a,n])=>{s.setAttribute(a,n)}),t?.textContent&&(s.textContent=t.textContent),s}}class u{constructor(e){this.analytics=e,this.modal=this.createModal(),document.body.appendChild(this.modal)}createModal(){const e=o.createElement("div",{classes:["stats-modal","hidden"]});e.innerHTML=`
      <div class="modal-overlay"></div>
      <div class="modal-content">
        <button class="modal-close">&times;</button>
        <h2>üìä Your Statistics</h2>
        <div class="stats-grid">
          <div class="stat-item">
            <span class="stat-value" id="games-played">0</span>
            <span class="stat-label">Games Played</span>
          </div>
          <div class="stat-item">
            <span class="stat-value" id="win-rate">0%</span>
            <span class="stat-label">Win Rate</span>
          </div>
          <div class="stat-item">
            <span class="stat-value" id="highest-level">0</span>
            <span class="stat-label">Highest Level</span>
          </div>
          <div class="stat-item">
            <span class="stat-value" id="avg-level">0</span>
            <span class="stat-label">Average Level</span>
          </div>
          <div class="stat-item">
            <span class="stat-value" id="avg-time">0s</span>
            <span class="stat-label">Avg. Game Time</span>
          </div>
        </div>
        <button class="reset-stats-btn">Reset Statistics</button>
      </div>
    `;const t=e.querySelector(".modal-close"),s=e.querySelector(".modal-overlay"),a=e.querySelector(".reset-stats-btn");return t?.addEventListener("click",()=>this.hide()),s?.addEventListener("click",()=>this.hide()),a?.addEventListener("click",()=>this.resetStats()),e}show(){this.updateStats(),this.modal.classList.remove("hidden"),document.body.style.overflow="hidden"}hide(){this.modal.classList.add("hidden"),document.body.style.overflow=""}updateStats(){const e=this.analytics.getStats(),t=this.analytics.getWinRate(),s=this.analytics.getAverageGameTime();this.modal.querySelector("#games-played").textContent=e.gamesPlayed.toString(),this.modal.querySelector("#win-rate").textContent=`${t.toFixed(1)}%`,this.modal.querySelector("#highest-level").textContent=e.highestLevel.toString(),this.modal.querySelector("#avg-level").textContent=e.averageLevel.toFixed(1),this.modal.querySelector("#avg-time").textContent=`${s.toFixed(0)}s`}resetStats(){confirm("Are you sure you want to reset all statistics?")&&(this.analytics.reset(),this.updateStats())}}function m(){const i=["green","red","blue","yellow"],e=Math.floor(Math.random()*i.length);return i[e]}function c(i,e=300){i.classList.add("active"),setTimeout(()=>{i.classList.remove("active")},e)}class g{constructor(){this.soundFiles={green:"https://s3.amazonaws.com/freecodecamp/simonSound1.mp3",red:"https://s3.amazonaws.com/freecodecamp/simonSound2.mp3",blue:"https://s3.amazonaws.com/freecodecamp/simonSound3.mp3",yellow:"https://s3.amazonaws.com/freecodecamp/simonSound4.mp3"}}play(e){new Audio(this.soundFiles[e]).play()}}class y{constructor(e,t,s,a={}){this.sequence=[],this.playerSequence=[],this.level=0,this.isStrict=!1,this.elements=e,this.storage=t,this.toast=s,this.soundManager=new g,this.config={maxLevel:a.maxLevel||20,sequenceDelay:a.sequenceDelay||800,flashDuration:a.flashDuration||300},this.init()}init(){this.attachEventListeners(),this.displayHighScore(),this.checkSavedGame()}attachEventListeners(){const{startButton:e,padGreen:t,padRed:s,padBlue:a,padYellow:n}=this.elements;e&&e.addEventListener("click",()=>this.start()),[t,s,a,n].forEach(l=>{l&&l.addEventListener("click",d=>this.handlePadClick(d))})}displayHighScore(){const e=this.storage.getHighScore();this.elements.highScoreDisplay&&(this.elements.highScoreDisplay.textContent=`üèÜ Best: Level ${e}`)}checkSavedGame(){if(this.storage.hasSavedGame()){const e=this.storage.getLastPlayed();if(e){const t=Date.now()-e.getTime();Math.floor(t/(1e3*60*60))<24&&this.toast.info("You have a game in progress! Click Start to continue.",4e3)}}}start(){if(this.storage.hasSavedGame()){const e=this.storage.loadGame();e&&confirm("Continue your previous game?")?(this.sequence=e.sequence,this.level=e.level-1,this.toast.info(`Resuming from Level ${e.level}`,2e3)):this.resetGame()}else this.resetGame();this.elements.startButton&&(this.elements.startButton.textContent="Restart"),this.nextLevel()}resetGame(){this.sequence=[],this.level=0,this.playerSequence=[],this.storage.clearGame()}nextLevel(){this.level++,this.elements.levelDisplay&&(this.elements.levelDisplay.textContent=`Level: ${this.level}`),this.playerSequence=[];const e=m();this.sequence.push(e),this.storage.saveGame(this.level,this.sequence),this.storage.updateHighScore(this.level),this.displayHighScore(),this.playSequence()}playSequence(){let e=0;const t=setInterval(()=>{const s=this.sequence[e],a=document.querySelector(`.pad.${s}`);a&&c(a,this.config.flashDuration),this.soundManager.play(s),e++,e>=this.sequence.length&&clearInterval(t)},this.config.sequenceDelay)}handlePadClick(e){const t=e.target,s=Array.from(t.classList).find(a=>a!=="pad");s&&(this.playerSequence.push(s),c(t,this.config.flashDuration),this.soundManager.play(s),this.checkPlayerSequence())}checkPlayerSequence(){const e=this.playerSequence.length-1;if(this.playerSequence[e]!==this.sequence[e]){this.handleWrongMove();return}this.playerSequence.length===this.sequence.length&&this.handleCorrectSequence()}handleWrongMove(){this.isStrict?(this.toast.error("Game Over! Starting a new game.",3e3),this.storage.clearGame(),setTimeout(()=>this.start(),3e3)):(this.toast.warning("Wrong move! Try again.",2e3),this.playerSequence=[],setTimeout(()=>this.playSequence(),2e3))}handleCorrectSequence(){if(this.level===this.config.maxLevel){this.toast.success("üéâ Congratulations! You won the game!",4e3),this.storage.clearGame(),setTimeout(()=>this.start(),4e3);return}this.toast.success(`Level ${this.level} completed!`,1e3),setTimeout(()=>this.nextLevel(),1e3)}setStrictMode(e){this.isStrict=e}getCurrentLevel(){return this.level}getSequenceLength(){return this.sequence.length}}class v{constructor(){this.storageKey="timon_game_state"}saveGame(e,t){const s=this.loadGame(),a=Math.max(s?.highScore||0,e),n={level:e,sequence:t,highScore:a,lastPlayed:new Date().toISOString()};localStorage.setItem(this.storageKey,JSON.stringify(n))}loadGame(){const e=localStorage.getItem(this.storageKey);if(!e)return null;try{return JSON.parse(e)}catch(t){return console.error("Error loading game state:",t),null}}getHighScore(){return this.loadGame()?.highScore||0}hasSavedGame(){const e=this.loadGame();return e!==null&&e.level>0}clearGame(){localStorage.removeItem(this.storageKey)}updateHighScore(e){const t=this.loadGame();t&&e>t.highScore&&(t.highScore=e,localStorage.setItem(this.storageKey,JSON.stringify(t)))}getLastPlayed(){const e=this.loadGame();return e?.lastPlayed?new Date(e.lastPlayed):null}}class p{constructor(){this.container=this.createContainer(),document.body.appendChild(this.container)}createContainer(){const e=document.createElement("div");return e.className="toast-container",e}show(e){const{message:t,type:s="info",duration:a=3e3}=e,n=document.createElement("div");n.className=`toast toast-${s}`,n.textContent=t;const r=this.getIcon(s);n.innerHTML=`
      <span class="toast-icon">${r}</span>
      <span class="toast-message">${t}</span>
    `,this.container.appendChild(n),setTimeout(()=>{n.classList.add("toast-show")},10),setTimeout(()=>{n.classList.remove("toast-show"),setTimeout(()=>{n.remove()},300)},a)}getIcon(e){return{success:"‚úì",error:"‚úï",info:"‚Ñπ",warning:"‚ö†"}[e]}success(e,t){this.show({message:e,type:"success",duration:t})}error(e,t){this.show({message:e,type:"error",duration:t})}info(e,t){this.show({message:e,type:"info",duration:t})}warning(e,t){this.show({message:e,type:"warning",duration:t})}}class S{constructor(){this.storageKey="timon_analytics",this.startTime=0}startSession(){this.startTime=Date.now()}endSession(e,t){const s=this.getStats(),a=Date.now()-this.startTime;s.gamesPlayed++,t&&s.gamesWon++,s.highestLevel=Math.max(s.highestLevel,e),s.totalTime+=a,s.averageLevel=(s.averageLevel*(s.gamesPlayed-1)+e)/s.gamesPlayed,this.saveStats(s)}getStats(){const e=localStorage.getItem(this.storageKey);return e?JSON.parse(e):{gamesPlayed:0,gamesWon:0,highestLevel:0,totalTime:0,averageLevel:0}}saveStats(e){localStorage.setItem(this.storageKey,JSON.stringify(e))}getWinRate(){const e=this.getStats();return e.gamesPlayed===0?0:e.gamesWon/e.gamesPlayed*100}getAverageGameTime(){const e=this.getStats();return e.gamesPlayed===0?0:e.totalTime/e.gamesPlayed/1e3}reset(){localStorage.removeItem(this.storageKey)}}function f(){const i=o.createElement("div",{classes:["high-score"]});return document.querySelector("main")?.prepend(i),{padGreen:o.querySelector(".pad.green"),padRed:o.querySelector(".pad.red"),padBlue:o.querySelector(".pad.blue"),padYellow:o.querySelector(".pad.yellow"),startButton:o.querySelector("#start-button"),levelDisplay:o.querySelector(".level"),highScoreDisplay:i}}function q(i){const e=o.createElement("button",{classes:["stats-button"],attributes:{"aria-label":"View Statistics",title:"View your game statistics"},textContent:"üìä"});e.addEventListener("click",()=>i.show()),document.body.appendChild(e)}function L(i,e){document.addEventListener("keydown",t=>{switch(t.key.toLowerCase()){case"s":(t.ctrlKey||t.metaKey)&&(t.preventDefault(),e.show());break;case"escape":e.hide();break;case" ":t.preventDefault(),o.querySelector("#start-button")?.click();break}})}function w(i,e){i.getStats().gamesPlayed===0&&setTimeout(()=>{e.info("üëã Welcome to Timon! Press Start or Spacebar to begin.",5e3)},1e3)}function h(){const i=new p,e=new v,t=new S,s=f(),a=new u(t),n=new y(s,e,i,{maxLevel:20,sequenceDelay:800,flashDuration:300});q(a),L(n,a),w(t,i)}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",h):h();
